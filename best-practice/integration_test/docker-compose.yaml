services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_DB: insurance
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
        # Custom database initialization scripts (optional).
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - back-tier

  kinesis:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=kinesis
    networks:
      - back-tier

  backend:
    image: ${LOCAL_IMAGE_NAME}
    ports:
      - "8080:8080"
    environment:
      - PREDICTIONS_STREAM_NAME=${PREDICTIONS_STREAM_NAME}
      - TEST_RUN= TRUE
      - RUN_ID=Test123
      - AWS_DEFAULT_REGION=eu-north-1
      - MODEL_LOCATION=/app/model
      - SCALER_LOCATION=/app/preprocessor
      - KINESIS_ENDPOINT_URL=http://kinesis:4566/
      - AWS_ACCESS_KEY_ID=abc
      - AWS_SECRET_ACCESS_KEY=xyz
    volumes:
      - "./models_mlflow:/app/model"
      - "./preprocessor:/app/preprocessor"
    networks:
      - back-tier
      - front-tier  
    depends_on:
      - db
      - kinesis

  adminer:
    image: adminer
    restart: always
    ports:
      - "8083:8080"
    networks:
      - back-tier
      - front-tier  
    depends_on:
      - db
    

  grafana:
    image: grafana/grafana-enterprise
    user: "472"
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./config/grafana_dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./dashboards:/opt/grafana/dashboards
    networks:
      - back-tier
      - front-tier
    restart: always
    depends_on:
      - db